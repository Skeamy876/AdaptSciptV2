
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocGELEEQNEGTLTORleftADDSUBleftMULDIVrightUNARYACCEPT ADAPT ADD AND COMMENTS DIV ELSE EQ EQUAL FLOAT FLOAT_VALUE FOR FUNC GE GT IDENTIFIER IF INIT INT INT_VALUE LE LT MUL NE OR PRINT RETURN STRING STRING_VALUE SUB UNARY VOID WHILE WHITESPACEprogram : programStartprogramStart :  INIT "(" ")" "{" statements "}" statements : statement\n                | statements statement\n                statement : function_calls\n                | condition\n                | function_declarations\n                | expression\n                | loops\n                | RETURN expression\n                | PRINT "(" expression ")"\n                | assignment\n                function_declarations : function_declarationfunction_declaration : FUNC IDENTIFIER "(" ")" ":" datatype "{" function_body "}" function_body : statementsfunction_calls : IDENTIFIER "(" ")"\n                     | IDENTIFIER "(" ")" function_calls\n                     | IDENTIFIER "(" parameters ")" \n                     | IDENTIFIER "(" parameters ")" function_callsparameters : parameterListparameterList : parameter\n                    | parameter "," parameterListparameter : datatype IDENTIFIERdatatype : INT\n                    | FLOAT\n                    | STRING\n                    | ADAPT\n                    | VOIDexpression : atoms\n                    | paren_expr\n                    | binary_expratoms : INT_VALUE\n                | FLOAT_VALUE\n                | STRING_VALUE\n                | variablevariable : IDENTIFIER paren_expr : "(" expression ")"binary_expr : atoms ADD expression\n                    | atoms SUB expression\n                    | atoms MUL expression\n                    | atoms DIV expression\n                    | atoms OR expression\n                    | atoms LE expression\n                    | atoms GE expression\n                    | atoms EQ expression\n                    | atoms NE expression\n                    | atoms GT expression\n                    | atoms LT expression\n                    | UNARY atoms\n                    | atoms UNARYassignment : datatype IDENTIFIER EQUAL expression \n                      | datatype IDENTIFIER EQUAL ACCEPT "(" ")" condition : IF expression "{" statements "}"\n                    | IF expression "{" statements "}" ELSE "{" statements "}"loops : loop\n                | loop loopsloop : forLoop\n                | whileLoopforLoop : FOR "(" expression ";" condition ";" expression ")" "{" statements "}"whileLoop : WHILE "(" condition ")" "{" statements "}"'
    
_lr_action_items = {'INIT':([0,],[3,]),'$end':([1,2,43,],[0,-1,-2,]),'(':([3,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,32,33,39,40,42,44,45,46,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,67,69,74,75,76,77,78,79,80,81,82,83,84,85,86,90,91,92,93,96,97,98,102,104,108,110,112,113,114,115,117,118,120,122,123,124,125,126,],[4,7,7,7,-3,-5,-6,-7,-8,-9,7,46,-12,47,7,-13,-29,-30,-31,-55,-32,-33,-34,-35,-57,-58,65,66,-36,-4,-10,7,7,7,7,7,7,7,7,7,7,7,7,-50,-56,87,-49,7,-37,-16,7,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,7,-11,47,-17,-18,7,-51,105,-19,-53,7,-52,7,7,7,7,-60,7,7,-54,-14,7,7,-59,]),')':([4,21,22,23,27,28,29,30,41,42,47,60,64,67,68,70,71,72,75,76,77,78,79,80,81,82,83,84,85,87,89,95,103,104,105,116,122,],[5,-29,-30,-31,-32,-33,-34,-35,67,-36,69,-50,-49,-37,90,93,-20,-21,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,99,101,-23,-22,-53,110,121,-54,]),'{':([5,21,22,23,27,28,29,30,34,35,36,37,38,42,48,60,64,67,75,76,77,78,79,80,81,82,83,84,85,101,109,111,121,],[6,-29,-30,-31,-32,-33,-34,-35,-24,-25,-26,-27,-28,-36,74,-50,-49,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,108,114,115,124,]),'RETURN':([6,8,9,10,11,12,13,14,17,18,20,21,22,23,24,27,28,29,30,32,33,42,44,45,60,61,64,67,69,74,75,76,77,78,79,80,81,82,83,84,85,90,92,93,96,97,102,104,108,110,113,114,115,117,118,120,122,123,124,125,126,],[15,15,-3,-5,-6,-7,-8,-9,-12,-36,-13,-29,-30,-31,-55,-32,-33,-34,-35,-57,-58,-36,-4,-10,-50,-56,-49,-37,-16,15,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-11,-17,-18,15,-51,-19,-53,15,-52,15,15,15,-60,15,15,-54,-14,15,15,-59,]),'PRINT':([6,8,9,10,11,12,13,14,17,18,20,21,22,23,24,27,28,29,30,32,33,42,44,45,60,61,64,67,69,74,75,76,77,78,79,80,81,82,83,84,85,90,92,93,96,97,102,104,108,110,113,114,115,117,118,120,122,123,124,125,126,],[16,16,-3,-5,-6,-7,-8,-9,-12,-36,-13,-29,-30,-31,-55,-32,-33,-34,-35,-57,-58,-36,-4,-10,-50,-56,-49,-37,-16,16,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-11,-17,-18,16,-51,-19,-53,16,-52,16,16,16,-60,16,16,-54,-14,16,16,-59,]),'IDENTIFIER':([6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,42,44,45,46,49,50,51,52,53,54,55,56,57,58,59,60,61,64,65,67,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,90,92,93,96,97,102,104,108,110,112,113,114,115,117,118,120,122,123,124,125,126,],[18,42,18,-3,-5,-6,-7,-8,-9,42,-12,-36,42,-13,-29,-30,-31,-55,62,63,-32,-33,-34,-35,42,-57,-58,-24,-25,-26,-27,-28,-36,-4,-10,42,42,42,42,42,42,42,42,42,42,42,42,-50,-56,-49,42,-37,91,95,18,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,42,-11,-17,91,18,-51,-19,-53,18,-52,42,18,18,18,-60,18,18,-54,-14,18,18,-59,]),'IF':([6,8,9,10,11,12,13,14,17,18,20,21,22,23,24,27,28,29,30,32,33,42,44,45,60,61,64,66,67,69,74,75,76,77,78,79,80,81,82,83,84,85,90,92,93,96,97,100,102,104,108,110,113,114,115,117,118,120,122,123,124,125,126,],[19,19,-3,-5,-6,-7,-8,-9,-12,-36,-13,-29,-30,-31,-55,-32,-33,-34,-35,-57,-58,-36,-4,-10,-50,-56,-49,19,-37,-16,19,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-11,-17,-18,19,-51,19,-19,-53,19,-52,19,19,19,-60,19,19,-54,-14,19,19,-59,]),'FUNC':([6,8,9,10,11,12,13,14,17,18,20,21,22,23,24,27,28,29,30,32,33,42,44,45,60,61,64,67,69,74,75,76,77,78,79,80,81,82,83,84,85,90,92,93,96,97,102,104,108,110,113,114,115,117,118,120,122,123,124,125,126,],[26,26,-3,-5,-6,-7,-8,-9,-12,-36,-13,-29,-30,-31,-55,-32,-33,-34,-35,-57,-58,-36,-4,-10,-50,-56,-49,-37,-16,26,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-11,-17,-18,26,-51,-19,-53,26,-52,26,26,26,-60,26,26,-54,-14,26,26,-59,]),'INT_VALUE':([6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,27,28,29,30,31,32,33,42,44,45,46,49,50,51,52,53,54,55,56,57,58,59,60,61,64,65,67,69,74,75,76,77,78,79,80,81,82,83,84,85,86,90,92,93,96,97,102,104,108,110,112,113,114,115,117,118,120,122,123,124,125,126,],[27,27,27,-3,-5,-6,-7,-8,-9,27,-12,-36,27,-13,-29,-30,-31,-55,-32,-33,-34,-35,27,-57,-58,-36,-4,-10,27,27,27,27,27,27,27,27,27,27,27,27,-50,-56,-49,27,-37,-16,27,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,27,-11,-17,-18,27,-51,-19,-53,27,-52,27,27,27,27,-60,27,27,-54,-14,27,27,-59,]),'FLOAT_VALUE':([6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,27,28,29,30,31,32,33,42,44,45,46,49,50,51,52,53,54,55,56,57,58,59,60,61,64,65,67,69,74,75,76,77,78,79,80,81,82,83,84,85,86,90,92,93,96,97,102,104,108,110,112,113,114,115,117,118,120,122,123,124,125,126,],[28,28,28,-3,-5,-6,-7,-8,-9,28,-12,-36,28,-13,-29,-30,-31,-55,-32,-33,-34,-35,28,-57,-58,-36,-4,-10,28,28,28,28,28,28,28,28,28,28,28,28,-50,-56,-49,28,-37,-16,28,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,28,-11,-17,-18,28,-51,-19,-53,28,-52,28,28,28,28,-60,28,28,-54,-14,28,28,-59,]),'STRING_VALUE':([6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,27,28,29,30,31,32,33,42,44,45,46,49,50,51,52,53,54,55,56,57,58,59,60,61,64,65,67,69,74,75,76,77,78,79,80,81,82,83,84,85,86,90,92,93,96,97,102,104,108,110,112,113,114,115,117,118,120,122,123,124,125,126,],[29,29,29,-3,-5,-6,-7,-8,-9,29,-12,-36,29,-13,-29,-30,-31,-55,-32,-33,-34,-35,29,-57,-58,-36,-4,-10,29,29,29,29,29,29,29,29,29,29,29,29,-50,-56,-49,29,-37,-16,29,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,29,-11,-17,-18,29,-51,-19,-53,29,-52,29,29,29,29,-60,29,29,-54,-14,29,29,-59,]),'UNARY':([6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,27,28,29,30,32,33,42,44,45,46,49,50,51,52,53,54,55,56,57,58,59,60,61,64,65,67,69,74,75,76,77,78,79,80,81,82,83,84,85,86,90,92,93,96,97,102,104,108,110,112,113,114,115,117,118,120,122,123,124,125,126,],[31,31,31,-3,-5,-6,-7,-8,-9,31,-12,-36,31,-13,60,-30,-31,-55,-32,-33,-34,-35,-57,-58,-36,-4,-10,31,31,31,31,31,31,31,31,31,31,31,31,-50,-56,-49,31,-37,-16,31,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,31,-11,-17,-18,31,-51,-19,-53,31,-52,31,31,31,31,-60,31,31,-54,-14,31,31,-59,]),'INT':([6,8,9,10,11,12,13,14,17,18,20,21,22,23,24,27,28,29,30,32,33,42,44,45,47,60,61,64,67,69,74,75,76,77,78,79,80,81,82,83,84,85,90,92,93,94,96,97,102,104,106,108,110,113,114,115,117,118,120,122,123,124,125,126,],[34,34,-3,-5,-6,-7,-8,-9,-12,-36,-13,-29,-30,-31,-55,-32,-33,-34,-35,-57,-58,-36,-4,-10,34,-50,-56,-49,-37,-16,34,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-11,-17,-18,34,34,-51,-19,-53,34,34,-52,34,34,34,-60,34,34,-54,-14,34,34,-59,]),'FLOAT':([6,8,9,10,11,12,13,14,17,18,20,21,22,23,24,27,28,29,30,32,33,42,44,45,47,60,61,64,67,69,74,75,76,77,78,79,80,81,82,83,84,85,90,92,93,94,96,97,102,104,106,108,110,113,114,115,117,118,120,122,123,124,125,126,],[35,35,-3,-5,-6,-7,-8,-9,-12,-36,-13,-29,-30,-31,-55,-32,-33,-34,-35,-57,-58,-36,-4,-10,35,-50,-56,-49,-37,-16,35,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-11,-17,-18,35,35,-51,-19,-53,35,35,-52,35,35,35,-60,35,35,-54,-14,35,35,-59,]),'STRING':([6,8,9,10,11,12,13,14,17,18,20,21,22,23,24,27,28,29,30,32,33,42,44,45,47,60,61,64,67,69,74,75,76,77,78,79,80,81,82,83,84,85,90,92,93,94,96,97,102,104,106,108,110,113,114,115,117,118,120,122,123,124,125,126,],[36,36,-3,-5,-6,-7,-8,-9,-12,-36,-13,-29,-30,-31,-55,-32,-33,-34,-35,-57,-58,-36,-4,-10,36,-50,-56,-49,-37,-16,36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-11,-17,-18,36,36,-51,-19,-53,36,36,-52,36,36,36,-60,36,36,-54,-14,36,36,-59,]),'ADAPT':([6,8,9,10,11,12,13,14,17,18,20,21,22,23,24,27,28,29,30,32,33,42,44,45,47,60,61,64,67,69,74,75,76,77,78,79,80,81,82,83,84,85,90,92,93,94,96,97,102,104,106,108,110,113,114,115,117,118,120,122,123,124,125,126,],[37,37,-3,-5,-6,-7,-8,-9,-12,-36,-13,-29,-30,-31,-55,-32,-33,-34,-35,-57,-58,-36,-4,-10,37,-50,-56,-49,-37,-16,37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-11,-17,-18,37,37,-51,-19,-53,37,37,-52,37,37,37,-60,37,37,-54,-14,37,37,-59,]),'VOID':([6,8,9,10,11,12,13,14,17,18,20,21,22,23,24,27,28,29,30,32,33,42,44,45,47,60,61,64,67,69,74,75,76,77,78,79,80,81,82,83,84,85,90,92,93,94,96,97,102,104,106,108,110,113,114,115,117,118,120,122,123,124,125,126,],[38,38,-3,-5,-6,-7,-8,-9,-12,-36,-13,-29,-30,-31,-55,-32,-33,-34,-35,-57,-58,-36,-4,-10,38,-50,-56,-49,-37,-16,38,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-11,-17,-18,38,38,-51,-19,-53,38,38,-52,38,38,38,-60,38,38,-54,-14,38,38,-59,]),'FOR':([6,8,9,10,11,12,13,14,17,18,20,21,22,23,24,27,28,29,30,32,33,42,44,45,60,61,64,67,69,74,75,76,77,78,79,80,81,82,83,84,85,90,92,93,96,97,102,104,108,110,113,114,115,117,118,120,122,123,124,125,126,],[39,39,-3,-5,-6,-7,-8,-9,-12,-36,-13,-29,-30,-31,39,-32,-33,-34,-35,-57,-58,-36,-4,-10,-50,-56,-49,-37,-16,39,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-11,-17,-18,39,-51,-19,-53,39,-52,39,39,39,-60,39,39,-54,-14,39,39,-59,]),'WHILE':([6,8,9,10,11,12,13,14,17,18,20,21,22,23,24,27,28,29,30,32,33,42,44,45,60,61,64,67,69,74,75,76,77,78,79,80,81,82,83,84,85,90,92,93,96,97,102,104,108,110,113,114,115,117,118,120,122,123,124,125,126,],[40,40,-3,-5,-6,-7,-8,-9,-12,-36,-13,-29,-30,-31,40,-32,-33,-34,-35,-57,-58,-36,-4,-10,-50,-56,-49,-37,-16,40,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-11,-17,-18,40,-51,-19,-53,40,-52,40,40,40,-60,40,40,-54,-14,40,40,-59,]),'}':([8,9,10,11,12,13,14,17,18,20,21,22,23,24,27,28,29,30,32,33,42,44,45,60,61,64,67,69,75,76,77,78,79,80,81,82,83,84,85,90,92,93,96,97,102,104,110,113,117,118,119,120,122,123,125,126,],[43,-3,-5,-6,-7,-8,-9,-12,-36,-13,-29,-30,-31,-55,-32,-33,-34,-35,-57,-58,-36,-4,-10,-50,-56,-49,-37,-16,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-11,-17,-18,104,-51,-19,-53,-52,117,-60,122,123,-15,-54,-14,126,-59,]),'ADD':([18,21,27,28,29,30,42,],[-36,49,-32,-33,-34,-35,-36,]),'SUB':([18,21,27,28,29,30,42,],[-36,50,-32,-33,-34,-35,-36,]),'MUL':([18,21,27,28,29,30,42,],[-36,51,-32,-33,-34,-35,-36,]),'DIV':([18,21,27,28,29,30,42,],[-36,52,-32,-33,-34,-35,-36,]),'OR':([18,21,27,28,29,30,42,],[-36,53,-32,-33,-34,-35,-36,]),'LE':([18,21,27,28,29,30,42,],[-36,54,-32,-33,-34,-35,-36,]),'GE':([18,21,27,28,29,30,42,],[-36,55,-32,-33,-34,-35,-36,]),'EQ':([18,21,27,28,29,30,42,],[-36,56,-32,-33,-34,-35,-36,]),'NE':([18,21,27,28,29,30,42,],[-36,57,-32,-33,-34,-35,-36,]),'GT':([18,21,27,28,29,30,42,],[-36,58,-32,-33,-34,-35,-36,]),'LT':([18,21,27,28,29,30,42,],[-36,59,-32,-33,-34,-35,-36,]),';':([21,22,23,27,28,29,30,42,60,64,67,75,76,77,78,79,80,81,82,83,84,85,88,104,107,122,],[-29,-30,-31,-32,-33,-34,-35,-36,-50,-49,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,100,-53,112,-54,]),'EQUAL':([62,],[86,]),',':([72,95,],[94,-23,]),'ACCEPT':([86,],[98,]),':':([99,],[106,]),'ELSE':([104,],[109,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'programStart':([0,],[2,]),'statements':([6,74,108,114,115,124,],[8,96,113,118,120,125,]),'statement':([6,8,74,96,108,113,114,115,118,120,124,125,],[9,44,9,44,9,44,9,9,44,44,9,44,]),'function_calls':([6,8,69,74,93,96,108,113,114,115,118,120,124,125,],[10,10,92,10,102,10,10,10,10,10,10,10,10,10,]),'condition':([6,8,66,74,96,100,108,113,114,115,118,120,124,125,],[11,11,89,11,11,107,11,11,11,11,11,11,11,11,]),'function_declarations':([6,8,74,96,108,113,114,115,118,120,124,125,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'expression':([6,7,8,15,19,46,49,50,51,52,53,54,55,56,57,58,59,65,74,86,96,108,112,113,114,115,118,120,124,125,],[13,41,13,45,48,68,75,76,77,78,79,80,81,82,83,84,85,88,13,97,13,13,116,13,13,13,13,13,13,13,]),'loops':([6,8,24,74,96,108,113,114,115,118,120,124,125,],[14,14,61,14,14,14,14,14,14,14,14,14,14,]),'assignment':([6,8,74,96,108,113,114,115,118,120,124,125,],[17,17,17,17,17,17,17,17,17,17,17,17,]),'function_declaration':([6,8,74,96,108,113,114,115,118,120,124,125,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'atoms':([6,7,8,15,19,31,46,49,50,51,52,53,54,55,56,57,58,59,65,74,86,96,108,112,113,114,115,118,120,124,125,],[21,21,21,21,21,64,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'paren_expr':([6,7,8,15,19,46,49,50,51,52,53,54,55,56,57,58,59,65,74,86,96,108,112,113,114,115,118,120,124,125,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'binary_expr':([6,7,8,15,19,46,49,50,51,52,53,54,55,56,57,58,59,65,74,86,96,108,112,113,114,115,118,120,124,125,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'loop':([6,8,24,74,96,108,113,114,115,118,120,124,125,],[24,24,24,24,24,24,24,24,24,24,24,24,24,]),'datatype':([6,8,47,74,94,96,106,108,113,114,115,118,120,124,125,],[25,25,73,25,73,25,111,25,25,25,25,25,25,25,25,]),'variable':([6,7,8,15,19,31,46,49,50,51,52,53,54,55,56,57,58,59,65,74,86,96,108,112,113,114,115,118,120,124,125,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'forLoop':([6,8,24,74,96,108,113,114,115,118,120,124,125,],[32,32,32,32,32,32,32,32,32,32,32,32,32,]),'whileLoop':([6,8,24,74,96,108,113,114,115,118,120,124,125,],[33,33,33,33,33,33,33,33,33,33,33,33,33,]),'parameters':([47,],[70,]),'parameterList':([47,94,],[71,103,]),'parameter':([47,94,],[72,72,]),'function_body':([115,],[119,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> programStart','program',1,'p_program','adapscriptyacc.py',16),
  ('programStart -> INIT ( ) { statements }','programStart',6,'p_programStart','adapscriptyacc.py',20),
  ('statements -> statement','statements',1,'p_statements','adapscriptyacc.py',23),
  ('statements -> statements statement','statements',2,'p_statements','adapscriptyacc.py',24),
  ('statement -> function_calls','statement',1,'p_statement','adapscriptyacc.py',29),
  ('statement -> condition','statement',1,'p_statement','adapscriptyacc.py',30),
  ('statement -> function_declarations','statement',1,'p_statement','adapscriptyacc.py',31),
  ('statement -> expression','statement',1,'p_statement','adapscriptyacc.py',32),
  ('statement -> loops','statement',1,'p_statement','adapscriptyacc.py',33),
  ('statement -> RETURN expression','statement',2,'p_statement','adapscriptyacc.py',34),
  ('statement -> PRINT ( expression )','statement',4,'p_statement','adapscriptyacc.py',35),
  ('statement -> assignment','statement',1,'p_statement','adapscriptyacc.py',36),
  ('function_declarations -> function_declaration','function_declarations',1,'p_function_declarations','adapscriptyacc.py',41),
  ('function_declaration -> FUNC IDENTIFIER ( ) : datatype { function_body }','function_declaration',9,'p_function_declaration','adapscriptyacc.py',44),
  ('function_body -> statements','function_body',1,'p_function_body','adapscriptyacc.py',48),
  ('function_calls -> IDENTIFIER ( )','function_calls',3,'p_function_calls','adapscriptyacc.py',51),
  ('function_calls -> IDENTIFIER ( ) function_calls','function_calls',4,'p_function_calls','adapscriptyacc.py',52),
  ('function_calls -> IDENTIFIER ( parameters )','function_calls',4,'p_function_calls','adapscriptyacc.py',53),
  ('function_calls -> IDENTIFIER ( parameters ) function_calls','function_calls',5,'p_function_calls','adapscriptyacc.py',54),
  ('parameters -> parameterList','parameters',1,'p_parameters','adapscriptyacc.py',57),
  ('parameterList -> parameter','parameterList',1,'p_parameterList','adapscriptyacc.py',60),
  ('parameterList -> parameter , parameterList','parameterList',3,'p_parameterList','adapscriptyacc.py',61),
  ('parameter -> datatype IDENTIFIER','parameter',2,'p_parameter','adapscriptyacc.py',64),
  ('datatype -> INT','datatype',1,'p_datatype','adapscriptyacc.py',67),
  ('datatype -> FLOAT','datatype',1,'p_datatype','adapscriptyacc.py',68),
  ('datatype -> STRING','datatype',1,'p_datatype','adapscriptyacc.py',69),
  ('datatype -> ADAPT','datatype',1,'p_datatype','adapscriptyacc.py',70),
  ('datatype -> VOID','datatype',1,'p_datatype','adapscriptyacc.py',71),
  ('expression -> atoms','expression',1,'p_expression','adapscriptyacc.py',75),
  ('expression -> paren_expr','expression',1,'p_expression','adapscriptyacc.py',76),
  ('expression -> binary_expr','expression',1,'p_expression','adapscriptyacc.py',77),
  ('atoms -> INT_VALUE','atoms',1,'p_atom','adapscriptyacc.py',80),
  ('atoms -> FLOAT_VALUE','atoms',1,'p_atom','adapscriptyacc.py',81),
  ('atoms -> STRING_VALUE','atoms',1,'p_atom','adapscriptyacc.py',82),
  ('atoms -> variable','atoms',1,'p_atom','adapscriptyacc.py',83),
  ('variable -> IDENTIFIER','variable',1,'p_variable','adapscriptyacc.py',86),
  ('paren_expr -> ( expression )','paren_expr',3,'p_paren_expr','adapscriptyacc.py',89),
  ('binary_expr -> atoms ADD expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',92),
  ('binary_expr -> atoms SUB expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',93),
  ('binary_expr -> atoms MUL expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',94),
  ('binary_expr -> atoms DIV expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',95),
  ('binary_expr -> atoms OR expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',96),
  ('binary_expr -> atoms LE expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',97),
  ('binary_expr -> atoms GE expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',98),
  ('binary_expr -> atoms EQ expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',99),
  ('binary_expr -> atoms NE expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',100),
  ('binary_expr -> atoms GT expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',101),
  ('binary_expr -> atoms LT expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',102),
  ('binary_expr -> UNARY atoms','binary_expr',2,'p_binary_expr','adapscriptyacc.py',103),
  ('binary_expr -> atoms UNARY','binary_expr',2,'p_binary_expr','adapscriptyacc.py',104),
  ('assignment -> datatype IDENTIFIER EQUAL expression','assignment',4,'p_assignment','adapscriptyacc.py',108),
  ('assignment -> datatype IDENTIFIER EQUAL ACCEPT ( )','assignment',6,'p_assignment','adapscriptyacc.py',109),
  ('condition -> IF expression { statements }','condition',5,'p_condition','adapscriptyacc.py',112),
  ('condition -> IF expression { statements } ELSE { statements }','condition',9,'p_condition','adapscriptyacc.py',113),
  ('loops -> loop','loops',1,'p_loops','adapscriptyacc.py',116),
  ('loops -> loop loops','loops',2,'p_loops','adapscriptyacc.py',117),
  ('loop -> forLoop','loop',1,'p_loop','adapscriptyacc.py',121),
  ('loop -> whileLoop','loop',1,'p_loop','adapscriptyacc.py',122),
  ('forLoop -> FOR ( expression ; condition ; expression ) { statements }','forLoop',11,'p_forLoop','adapscriptyacc.py',126),
  ('whileLoop -> WHILE ( condition ) { statements }','whileLoop',7,'p_whileLoop','adapscriptyacc.py',129),
]
