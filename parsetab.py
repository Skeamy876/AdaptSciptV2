
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocGELEEQNEGTLTORleftADDSUBleftMULDIVrightUNARYACCEPT ADAPT ADD AND COMMENTS DIV ELSE EQ EQUAL FLOAT FLOAT_VALUE FOR FUNC GE GT IDENTIFIER IF INIT INT INT_VALUE LE LT MUL NE OR PRINT RETURN STRING STRING_VALUE SUB UNARY VOID WHILE WHITESPACEprogram : programStartprogramStart : FUNC INIT "(" ")" "{" statements "}" statements : statement\n                | statements statement\n                statement : function_calls\n                | condition\n                | function_declarations\n                | expression\n                | loops\n                | RETURN expression\n                | PRINT "(" expression ")"\n                | assignment\n                function_declarations : function_declarationfunction_declaration : FUNC IDENTIFIER "(" ")" ":" datatype "{" function_body "}" function_body : statementsfunction_calls : IDENTIFIER "(" ")"\n                     | IDENTIFIER "(" ")" function_calls\n                     | IDENTIFIER "(" parameters ")" \n                     | IDENTIFIER "(" parameters ")" function_callsparameters : parameterListparameterList : parameter\n                    | parameter "," parameterListparameter : datatype IDENTIFIERdatatype : INT\n                    | FLOAT\n                    | STRING\n                    | ADAPT\n                    | VOIDexpression : atoms\n                    | paren_expr\n                    | binary_expratoms : INT_VALUE\n                | FLOAT_VALUE\n                | STRING_VALUE\n                | variablevariable : IDENTIFIER paren_expr : "(" expression ")"binary_expr : atoms ADD expression\n                    | atoms SUB expression\n                    | atoms MUL expression\n                    | atoms DIV expression\n                    | atoms OR expression\n                    | atoms LE expression\n                    | atoms GE expression\n                    | atoms EQ expression\n                    | atoms NE expression\n                    | atoms GT expression\n                    | atoms LT expression\n                    | UNARY atoms\n                    | atoms UNARYassignment : datatype IDENTIFIER EQUAL expression \n                      | datatype IDENTIFIER EQUAL ACCEPT "(" ")" condition : IF expression "{" statements "}"\n                    | IF expression "{" statements "}" ELSE "{" statements "}"loops : loop\n                | loop loopsloop : forLoop\n                | whileLoopforLoop : FOR "(" expression ";" condition ";" expression ")" "{" statements "}"whileLoop : WHILE "(" condition ")" "{" statements "}"'
    
_lr_action_items = {'FUNC':([0,7,10,11,12,13,14,15,16,19,20,22,23,24,25,26,28,29,30,31,33,34,44,46,47,62,63,65,69,71,76,77,78,79,80,81,82,83,84,85,86,87,92,94,95,98,99,104,106,109,112,114,115,116,118,120,121,123,124,125,126,127,],[3,8,8,-3,-5,-6,-7,-8,-9,-12,-36,-13,-29,-30,-31,-55,-32,-33,-34,-35,-57,-58,-36,-4,-10,-50,-56,-49,-37,-16,8,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-11,-17,-18,8,-51,-19,-53,8,-52,8,8,8,-60,8,8,-14,-54,8,8,-59,]),'$end':([1,2,45,],[0,-1,-2,]),'INIT':([3,],[4,]),'(':([4,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,33,34,40,41,42,44,46,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,71,76,77,78,79,80,81,82,83,84,85,86,87,88,92,93,94,95,98,99,100,104,106,109,112,113,114,115,116,118,120,121,123,124,125,126,127,],[5,9,9,9,-3,-5,-6,-7,-8,-9,9,48,-12,49,9,-13,-29,-30,-31,-55,-32,-33,-34,-35,-57,-58,66,67,68,-36,-4,-10,9,9,9,9,9,9,9,9,9,9,9,9,-50,-56,-49,9,-37,-16,9,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,9,-11,49,-17,-18,9,-51,107,-19,-53,9,-52,9,9,9,9,-60,9,9,-14,-54,9,9,-59,]),')':([5,23,24,25,28,29,30,31,43,44,49,62,65,68,69,70,72,73,74,77,78,79,80,81,82,83,84,85,86,87,90,97,105,106,107,117,124,],[6,-29,-30,-31,-32,-33,-34,-35,69,-36,71,-50,-49,91,-37,92,95,-20,-21,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,102,-23,-22,-53,112,122,-54,]),'{':([6,23,24,25,28,29,30,31,35,36,37,38,39,44,50,62,65,69,77,78,79,80,81,82,83,84,85,86,87,102,110,111,122,],[7,-29,-30,-31,-32,-33,-34,-35,-24,-25,-26,-27,-28,-36,76,-50,-49,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,109,115,116,125,]),'RETURN':([7,10,11,12,13,14,15,16,19,20,22,23,24,25,26,28,29,30,31,33,34,44,46,47,62,63,65,69,71,76,77,78,79,80,81,82,83,84,85,86,87,92,94,95,98,99,104,106,109,112,114,115,116,118,120,121,123,124,125,126,127,],[17,17,-3,-5,-6,-7,-8,-9,-12,-36,-13,-29,-30,-31,-55,-32,-33,-34,-35,-57,-58,-36,-4,-10,-50,-56,-49,-37,-16,17,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-11,-17,-18,17,-51,-19,-53,17,-52,17,17,17,-60,17,17,-14,-54,17,17,-59,]),'PRINT':([7,10,11,12,13,14,15,16,19,20,22,23,24,25,26,28,29,30,31,33,34,44,46,47,62,63,65,69,71,76,77,78,79,80,81,82,83,84,85,86,87,92,94,95,98,99,104,106,109,112,114,115,116,118,120,121,123,124,125,126,127,],[18,18,-3,-5,-6,-7,-8,-9,-12,-36,-13,-29,-30,-31,-55,-32,-33,-34,-35,-57,-58,-36,-4,-10,-50,-56,-49,-37,-16,18,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-11,-17,-18,18,-51,-19,-53,18,-52,18,18,18,-60,18,18,-14,-54,18,18,-59,]),'IDENTIFIER':([7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,44,46,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,92,94,95,98,99,104,106,109,112,113,114,115,116,118,120,121,123,124,125,126,127,],[20,42,44,20,-3,-5,-6,-7,-8,-9,44,-12,-36,44,-13,-29,-30,-31,-55,64,-32,-33,-34,-35,44,-57,-58,-24,-25,-26,-27,-28,-36,-4,-10,44,44,44,44,44,44,44,44,44,44,44,44,-50,-56,-49,44,-37,93,97,20,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,44,-11,-17,93,20,-51,-19,-53,20,-52,44,20,20,20,-60,20,20,-14,-54,20,20,-59,]),'IF':([7,10,11,12,13,14,15,16,19,20,22,23,24,25,26,28,29,30,31,33,34,44,46,47,62,63,65,67,69,71,76,77,78,79,80,81,82,83,84,85,86,87,92,94,95,98,99,101,104,106,109,112,114,115,116,118,120,121,123,124,125,126,127,],[21,21,-3,-5,-6,-7,-8,-9,-12,-36,-13,-29,-30,-31,-55,-32,-33,-34,-35,-57,-58,-36,-4,-10,-50,-56,-49,21,-37,-16,21,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-11,-17,-18,21,-51,21,-19,-53,21,-52,21,21,21,-60,21,21,-14,-54,21,21,-59,]),'INT_VALUE':([7,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,44,46,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,71,76,77,78,79,80,81,82,83,84,85,86,87,88,92,94,95,98,99,104,106,109,112,113,114,115,116,118,120,121,123,124,125,126,127,],[28,28,28,-3,-5,-6,-7,-8,-9,28,-12,-36,28,-13,-29,-30,-31,-55,-32,-33,-34,-35,28,-57,-58,-36,-4,-10,28,28,28,28,28,28,28,28,28,28,28,28,-50,-56,-49,28,-37,-16,28,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,28,-11,-17,-18,28,-51,-19,-53,28,-52,28,28,28,28,-60,28,28,-14,-54,28,28,-59,]),'FLOAT_VALUE':([7,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,44,46,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,71,76,77,78,79,80,81,82,83,84,85,86,87,88,92,94,95,98,99,104,106,109,112,113,114,115,116,118,120,121,123,124,125,126,127,],[29,29,29,-3,-5,-6,-7,-8,-9,29,-12,-36,29,-13,-29,-30,-31,-55,-32,-33,-34,-35,29,-57,-58,-36,-4,-10,29,29,29,29,29,29,29,29,29,29,29,29,-50,-56,-49,29,-37,-16,29,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,29,-11,-17,-18,29,-51,-19,-53,29,-52,29,29,29,29,-60,29,29,-14,-54,29,29,-59,]),'STRING_VALUE':([7,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,44,46,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,71,76,77,78,79,80,81,82,83,84,85,86,87,88,92,94,95,98,99,104,106,109,112,113,114,115,116,118,120,121,123,124,125,126,127,],[30,30,30,-3,-5,-6,-7,-8,-9,30,-12,-36,30,-13,-29,-30,-31,-55,-32,-33,-34,-35,30,-57,-58,-36,-4,-10,30,30,30,30,30,30,30,30,30,30,30,30,-50,-56,-49,30,-37,-16,30,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,30,-11,-17,-18,30,-51,-19,-53,30,-52,30,30,30,30,-60,30,30,-14,-54,30,30,-59,]),'UNARY':([7,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,33,34,44,46,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,71,76,77,78,79,80,81,82,83,84,85,86,87,88,92,94,95,98,99,104,106,109,112,113,114,115,116,118,120,121,123,124,125,126,127,],[32,32,32,-3,-5,-6,-7,-8,-9,32,-12,-36,32,-13,62,-30,-31,-55,-32,-33,-34,-35,-57,-58,-36,-4,-10,32,32,32,32,32,32,32,32,32,32,32,32,-50,-56,-49,32,-37,-16,32,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,32,-11,-17,-18,32,-51,-19,-53,32,-52,32,32,32,32,-60,32,32,-14,-54,32,32,-59,]),'INT':([7,10,11,12,13,14,15,16,19,20,22,23,24,25,26,28,29,30,31,33,34,44,46,47,49,62,63,65,69,71,76,77,78,79,80,81,82,83,84,85,86,87,92,94,95,96,98,99,103,104,106,109,112,114,115,116,118,120,121,123,124,125,126,127,],[35,35,-3,-5,-6,-7,-8,-9,-12,-36,-13,-29,-30,-31,-55,-32,-33,-34,-35,-57,-58,-36,-4,-10,35,-50,-56,-49,-37,-16,35,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-11,-17,-18,35,35,-51,35,-19,-53,35,-52,35,35,35,-60,35,35,-14,-54,35,35,-59,]),'FLOAT':([7,10,11,12,13,14,15,16,19,20,22,23,24,25,26,28,29,30,31,33,34,44,46,47,49,62,63,65,69,71,76,77,78,79,80,81,82,83,84,85,86,87,92,94,95,96,98,99,103,104,106,109,112,114,115,116,118,120,121,123,124,125,126,127,],[36,36,-3,-5,-6,-7,-8,-9,-12,-36,-13,-29,-30,-31,-55,-32,-33,-34,-35,-57,-58,-36,-4,-10,36,-50,-56,-49,-37,-16,36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-11,-17,-18,36,36,-51,36,-19,-53,36,-52,36,36,36,-60,36,36,-14,-54,36,36,-59,]),'STRING':([7,10,11,12,13,14,15,16,19,20,22,23,24,25,26,28,29,30,31,33,34,44,46,47,49,62,63,65,69,71,76,77,78,79,80,81,82,83,84,85,86,87,92,94,95,96,98,99,103,104,106,109,112,114,115,116,118,120,121,123,124,125,126,127,],[37,37,-3,-5,-6,-7,-8,-9,-12,-36,-13,-29,-30,-31,-55,-32,-33,-34,-35,-57,-58,-36,-4,-10,37,-50,-56,-49,-37,-16,37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-11,-17,-18,37,37,-51,37,-19,-53,37,-52,37,37,37,-60,37,37,-14,-54,37,37,-59,]),'ADAPT':([7,10,11,12,13,14,15,16,19,20,22,23,24,25,26,28,29,30,31,33,34,44,46,47,49,62,63,65,69,71,76,77,78,79,80,81,82,83,84,85,86,87,92,94,95,96,98,99,103,104,106,109,112,114,115,116,118,120,121,123,124,125,126,127,],[38,38,-3,-5,-6,-7,-8,-9,-12,-36,-13,-29,-30,-31,-55,-32,-33,-34,-35,-57,-58,-36,-4,-10,38,-50,-56,-49,-37,-16,38,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-11,-17,-18,38,38,-51,38,-19,-53,38,-52,38,38,38,-60,38,38,-14,-54,38,38,-59,]),'VOID':([7,10,11,12,13,14,15,16,19,20,22,23,24,25,26,28,29,30,31,33,34,44,46,47,49,62,63,65,69,71,76,77,78,79,80,81,82,83,84,85,86,87,92,94,95,96,98,99,103,104,106,109,112,114,115,116,118,120,121,123,124,125,126,127,],[39,39,-3,-5,-6,-7,-8,-9,-12,-36,-13,-29,-30,-31,-55,-32,-33,-34,-35,-57,-58,-36,-4,-10,39,-50,-56,-49,-37,-16,39,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-11,-17,-18,39,39,-51,39,-19,-53,39,-52,39,39,39,-60,39,39,-14,-54,39,39,-59,]),'FOR':([7,10,11,12,13,14,15,16,19,20,22,23,24,25,26,28,29,30,31,33,34,44,46,47,62,63,65,69,71,76,77,78,79,80,81,82,83,84,85,86,87,92,94,95,98,99,104,106,109,112,114,115,116,118,120,121,123,124,125,126,127,],[40,40,-3,-5,-6,-7,-8,-9,-12,-36,-13,-29,-30,-31,40,-32,-33,-34,-35,-57,-58,-36,-4,-10,-50,-56,-49,-37,-16,40,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-11,-17,-18,40,-51,-19,-53,40,-52,40,40,40,-60,40,40,-14,-54,40,40,-59,]),'WHILE':([7,10,11,12,13,14,15,16,19,20,22,23,24,25,26,28,29,30,31,33,34,44,46,47,62,63,65,69,71,76,77,78,79,80,81,82,83,84,85,86,87,92,94,95,98,99,104,106,109,112,114,115,116,118,120,121,123,124,125,126,127,],[41,41,-3,-5,-6,-7,-8,-9,-12,-36,-13,-29,-30,-31,41,-32,-33,-34,-35,-57,-58,-36,-4,-10,-50,-56,-49,-37,-16,41,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-11,-17,-18,41,-51,-19,-53,41,-52,41,41,41,-60,41,41,-14,-54,41,41,-59,]),'}':([10,11,12,13,14,15,16,19,20,22,23,24,25,26,28,29,30,31,33,34,44,46,47,62,63,65,69,71,77,78,79,80,81,82,83,84,85,86,87,92,94,95,98,99,104,106,112,114,118,119,120,121,123,124,126,127,],[45,-3,-5,-6,-7,-8,-9,-12,-36,-13,-29,-30,-31,-55,-32,-33,-34,-35,-57,-58,-36,-4,-10,-50,-56,-49,-37,-16,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-11,-17,-18,106,-51,-19,-53,-52,118,-60,123,-15,124,-14,-54,127,-59,]),'ADD':([20,23,28,29,30,31,44,],[-36,51,-32,-33,-34,-35,-36,]),'SUB':([20,23,28,29,30,31,44,],[-36,52,-32,-33,-34,-35,-36,]),'MUL':([20,23,28,29,30,31,44,],[-36,53,-32,-33,-34,-35,-36,]),'DIV':([20,23,28,29,30,31,44,],[-36,54,-32,-33,-34,-35,-36,]),'OR':([20,23,28,29,30,31,44,],[-36,55,-32,-33,-34,-35,-36,]),'LE':([20,23,28,29,30,31,44,],[-36,56,-32,-33,-34,-35,-36,]),'GE':([20,23,28,29,30,31,44,],[-36,57,-32,-33,-34,-35,-36,]),'EQ':([20,23,28,29,30,31,44,],[-36,58,-32,-33,-34,-35,-36,]),'NE':([20,23,28,29,30,31,44,],[-36,59,-32,-33,-34,-35,-36,]),'GT':([20,23,28,29,30,31,44,],[-36,60,-32,-33,-34,-35,-36,]),'LT':([20,23,28,29,30,31,44,],[-36,61,-32,-33,-34,-35,-36,]),';':([23,24,25,28,29,30,31,44,62,65,69,77,78,79,80,81,82,83,84,85,86,87,89,106,108,124,],[-29,-30,-31,-32,-33,-34,-35,-36,-50,-49,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,101,-53,113,-54,]),'EQUAL':([64,],[88,]),',':([74,97,],[96,-23,]),'ACCEPT':([88,],[100,]),':':([91,],[103,]),'ELSE':([106,],[111,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'programStart':([0,],[2,]),'statements':([7,76,109,115,116,125,],[10,98,114,120,121,126,]),'statement':([7,10,76,98,109,114,115,116,120,121,125,126,],[11,46,11,46,11,46,11,11,46,46,11,46,]),'function_calls':([7,10,71,76,95,98,109,114,115,116,120,121,125,126,],[12,12,94,12,104,12,12,12,12,12,12,12,12,12,]),'condition':([7,10,67,76,98,101,109,114,115,116,120,121,125,126,],[13,13,90,13,13,108,13,13,13,13,13,13,13,13,]),'function_declarations':([7,10,76,98,109,114,115,116,120,121,125,126,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'expression':([7,9,10,17,21,48,51,52,53,54,55,56,57,58,59,60,61,66,76,88,98,109,113,114,115,116,120,121,125,126,],[15,43,15,47,50,70,77,78,79,80,81,82,83,84,85,86,87,89,15,99,15,15,117,15,15,15,15,15,15,15,]),'loops':([7,10,26,76,98,109,114,115,116,120,121,125,126,],[16,16,63,16,16,16,16,16,16,16,16,16,16,]),'assignment':([7,10,76,98,109,114,115,116,120,121,125,126,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'function_declaration':([7,10,76,98,109,114,115,116,120,121,125,126,],[22,22,22,22,22,22,22,22,22,22,22,22,]),'atoms':([7,9,10,17,21,32,48,51,52,53,54,55,56,57,58,59,60,61,66,76,88,98,109,113,114,115,116,120,121,125,126,],[23,23,23,23,23,65,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'paren_expr':([7,9,10,17,21,48,51,52,53,54,55,56,57,58,59,60,61,66,76,88,98,109,113,114,115,116,120,121,125,126,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'binary_expr':([7,9,10,17,21,48,51,52,53,54,55,56,57,58,59,60,61,66,76,88,98,109,113,114,115,116,120,121,125,126,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'loop':([7,10,26,76,98,109,114,115,116,120,121,125,126,],[26,26,26,26,26,26,26,26,26,26,26,26,26,]),'datatype':([7,10,49,76,96,98,103,109,114,115,116,120,121,125,126,],[27,27,75,27,75,27,110,27,27,27,27,27,27,27,27,]),'variable':([7,9,10,17,21,32,48,51,52,53,54,55,56,57,58,59,60,61,66,76,88,98,109,113,114,115,116,120,121,125,126,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'forLoop':([7,10,26,76,98,109,114,115,116,120,121,125,126,],[33,33,33,33,33,33,33,33,33,33,33,33,33,]),'whileLoop':([7,10,26,76,98,109,114,115,116,120,121,125,126,],[34,34,34,34,34,34,34,34,34,34,34,34,34,]),'parameters':([49,],[72,]),'parameterList':([49,96,],[73,105,]),'parameter':([49,96,],[74,74,]),'function_body':([115,],[119,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> programStart','program',1,'p_program','adapscriptyacc.py',16),
  ('programStart -> FUNC INIT ( ) { statements }','programStart',7,'p_programStart','adapscriptyacc.py',20),
  ('statements -> statement','statements',1,'p_statements','adapscriptyacc.py',24),
  ('statements -> statements statement','statements',2,'p_statements','adapscriptyacc.py',25),
  ('statement -> function_calls','statement',1,'p_statement','adapscriptyacc.py',33),
  ('statement -> condition','statement',1,'p_statement','adapscriptyacc.py',34),
  ('statement -> function_declarations','statement',1,'p_statement','adapscriptyacc.py',35),
  ('statement -> expression','statement',1,'p_statement','adapscriptyacc.py',36),
  ('statement -> loops','statement',1,'p_statement','adapscriptyacc.py',37),
  ('statement -> RETURN expression','statement',2,'p_statement','adapscriptyacc.py',38),
  ('statement -> PRINT ( expression )','statement',4,'p_statement','adapscriptyacc.py',39),
  ('statement -> assignment','statement',1,'p_statement','adapscriptyacc.py',40),
  ('function_declarations -> function_declaration','function_declarations',1,'p_function_declarations','adapscriptyacc.py',45),
  ('function_declaration -> FUNC IDENTIFIER ( ) : datatype { function_body }','function_declaration',9,'p_function_declaration','adapscriptyacc.py',48),
  ('function_body -> statements','function_body',1,'p_function_body','adapscriptyacc.py',52),
  ('function_calls -> IDENTIFIER ( )','function_calls',3,'p_function_calls','adapscriptyacc.py',55),
  ('function_calls -> IDENTIFIER ( ) function_calls','function_calls',4,'p_function_calls','adapscriptyacc.py',56),
  ('function_calls -> IDENTIFIER ( parameters )','function_calls',4,'p_function_calls','adapscriptyacc.py',57),
  ('function_calls -> IDENTIFIER ( parameters ) function_calls','function_calls',5,'p_function_calls','adapscriptyacc.py',58),
  ('parameters -> parameterList','parameters',1,'p_parameters','adapscriptyacc.py',61),
  ('parameterList -> parameter','parameterList',1,'p_parameterList','adapscriptyacc.py',64),
  ('parameterList -> parameter , parameterList','parameterList',3,'p_parameterList','adapscriptyacc.py',65),
  ('parameter -> datatype IDENTIFIER','parameter',2,'p_parameter','adapscriptyacc.py',68),
  ('datatype -> INT','datatype',1,'p_datatype','adapscriptyacc.py',71),
  ('datatype -> FLOAT','datatype',1,'p_datatype','adapscriptyacc.py',72),
  ('datatype -> STRING','datatype',1,'p_datatype','adapscriptyacc.py',73),
  ('datatype -> ADAPT','datatype',1,'p_datatype','adapscriptyacc.py',74),
  ('datatype -> VOID','datatype',1,'p_datatype','adapscriptyacc.py',75),
  ('expression -> atoms','expression',1,'p_expression','adapscriptyacc.py',79),
  ('expression -> paren_expr','expression',1,'p_expression','adapscriptyacc.py',80),
  ('expression -> binary_expr','expression',1,'p_expression','adapscriptyacc.py',81),
  ('atoms -> INT_VALUE','atoms',1,'p_atom','adapscriptyacc.py',84),
  ('atoms -> FLOAT_VALUE','atoms',1,'p_atom','adapscriptyacc.py',85),
  ('atoms -> STRING_VALUE','atoms',1,'p_atom','adapscriptyacc.py',86),
  ('atoms -> variable','atoms',1,'p_atom','adapscriptyacc.py',87),
  ('variable -> IDENTIFIER','variable',1,'p_variable','adapscriptyacc.py',90),
  ('paren_expr -> ( expression )','paren_expr',3,'p_paren_expr','adapscriptyacc.py',93),
  ('binary_expr -> atoms ADD expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',96),
  ('binary_expr -> atoms SUB expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',97),
  ('binary_expr -> atoms MUL expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',98),
  ('binary_expr -> atoms DIV expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',99),
  ('binary_expr -> atoms OR expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',100),
  ('binary_expr -> atoms LE expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',101),
  ('binary_expr -> atoms GE expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',102),
  ('binary_expr -> atoms EQ expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',103),
  ('binary_expr -> atoms NE expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',104),
  ('binary_expr -> atoms GT expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',105),
  ('binary_expr -> atoms LT expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',106),
  ('binary_expr -> UNARY atoms','binary_expr',2,'p_binary_expr','adapscriptyacc.py',107),
  ('binary_expr -> atoms UNARY','binary_expr',2,'p_binary_expr','adapscriptyacc.py',108),
  ('assignment -> datatype IDENTIFIER EQUAL expression','assignment',4,'p_assignment','adapscriptyacc.py',112),
  ('assignment -> datatype IDENTIFIER EQUAL ACCEPT ( )','assignment',6,'p_assignment','adapscriptyacc.py',113),
  ('condition -> IF expression { statements }','condition',5,'p_condition','adapscriptyacc.py',116),
  ('condition -> IF expression { statements } ELSE { statements }','condition',9,'p_condition','adapscriptyacc.py',117),
  ('loops -> loop','loops',1,'p_loops','adapscriptyacc.py',120),
  ('loops -> loop loops','loops',2,'p_loops','adapscriptyacc.py',121),
  ('loop -> forLoop','loop',1,'p_loop','adapscriptyacc.py',125),
  ('loop -> whileLoop','loop',1,'p_loop','adapscriptyacc.py',126),
  ('forLoop -> FOR ( expression ; condition ; expression ) { statements }','forLoop',11,'p_forLoop','adapscriptyacc.py',130),
  ('whileLoop -> WHILE ( condition ) { statements }','whileLoop',7,'p_whileLoop','adapscriptyacc.py',133),
]
