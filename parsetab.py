
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftADDSUBleftMULDIVnonassocMINUSGELEEQNEGTLTORACCEPT ADAPT ADD AND COMMENTS DIV ELSE EQ EQUAL FLOAT FLOAT_VALUE FN FOR FUNC GE GT IDENTIFIER IF INIT INT INT_VALUE LE LT MINUS MUL NE OR PRINT RETURN STRING STRING_VALUE SUB UNARY VOID WHILE WHITESPACEprogram : programStartprogramStart : FUNC INIT "(" ")" "{" statements "}" statements : statement\n                | statements statement\n                statement : function_calls\n                | condition\n                | function_declarations\n                | expression\n                | loops\n                | RETURN expression\n                | PRINT "(" expression ")"\n                | assignment\n                function_declarations : function_declaration \n                                 | function_declarations function_declarationfunction_declaration : FN IDENTIFIER "(" ")" ":" datatype "{" function_body "}" \n                                | FN IDENTIFIER "(" parameters ")" ":" datatype "{" function_body "}" function_body : statementsfunction_calls : IDENTIFIER "(" ")"\n                     | IDENTIFIER "(" ")" function_calls\n                     | IDENTIFIER "(" parameters ")" \n                     | IDENTIFIER "(" parameters ")" function_callsparameters : parameterListparameterList : parameter\n                    | parameter "," parameterListparameter : IDENTIFIER\n                | datatype IDENTIFIERdatatype : INT\n                    | FLOAT\n                    | STRING\n                    | ADAPT\n                    | VOIDexpression : atoms\n                    | paren_expr\n                    | binary_expratoms : INT_VALUE\n                | FLOAT_VALUE\n                | STRING_VALUE\n                | variablevariable : IDENTIFIER paren_expr : "(" expression ")"binary_expr : atoms ADD expression\n                        | atoms SUB expression\n                        | atoms MUL expression\n                        | atoms DIV expression\n                        | atoms OR expression\n                        | atoms LE expression\n                        | atoms GE expression\n                        | atoms EQ expression\n                        | atoms NE expression\n                        | atoms GT expression\n                        | atoms LT expression\n                        | MINUS UNARY  %prec MINUSassignment : datatype IDENTIFIER EQUAL expression \n                      | datatype IDENTIFIER EQUAL function_calls\n                      | datatype IDENTIFIER EQUAL ACCEPT "(" ")" condition : IF expression "{" statements "}"\n                    | IF expression "{" statements "}" ELSE "{" statements "}"loops : loop\n                | loop loopsloop : forLoop\n                | whileLoopforLoop : FOR "(" assignment ";" expression ";" expression ")" "{" statements "}"whileLoop : assignment WHILE "(" expression ")" "{" statements "}"'
    
_lr_action_items = {'FUNC':([0,],[3,]),'$end':([1,2,43,],[0,-1,-2,]),'INIT':([3,],[4,]),'(':([4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,33,34,40,42,44,45,46,47,48,51,52,53,54,55,56,57,58,59,60,61,62,65,66,68,70,72,77,78,79,80,81,82,83,84,85,86,87,88,89,92,94,95,96,99,100,101,102,105,107,109,114,116,119,120,121,122,125,126,128,129,131,132,134,135,136,137,],[5,8,8,8,-3,-5,-6,-7,-8,-9,8,47,-12,49,8,-13,-32,-33,-34,-58,-35,-36,-37,-38,-60,-61,67,-39,-4,-14,-10,8,70,8,8,8,8,8,8,8,8,8,8,8,-59,90,-52,-40,8,-18,8,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,8,-11,49,-19,-20,8,-53,-54,110,8,-21,-56,8,-55,8,8,8,8,-63,8,8,8,-57,-15,8,-16,8,-62,]),')':([5,22,23,24,28,29,30,31,41,42,49,66,68,69,71,73,74,75,78,79,80,81,82,83,84,85,86,87,88,90,93,98,104,108,110,124,],[6,-32,-33,-34,-35,-36,-37,-38,68,-39,72,-52,-40,92,-25,96,-22,-23,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,103,106,-26,112,-24,116,130,]),'{':([6,22,23,24,28,29,30,31,35,36,37,38,39,42,50,66,68,78,79,80,81,82,83,84,85,86,87,88,106,115,117,123,130,],[7,-32,-33,-34,-35,-36,-37,-38,-27,-28,-29,-30,-31,-39,77,-52,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,114,121,122,129,134,]),'RETURN':([7,9,10,11,12,13,14,15,18,19,21,22,23,24,25,28,29,30,31,33,34,42,44,45,46,62,66,68,72,77,78,79,80,81,82,83,84,85,86,87,88,92,95,96,99,100,101,107,109,114,116,120,121,122,125,126,128,129,131,132,134,135,136,137,],[16,16,-3,-5,-6,-7,-8,-9,-12,-39,-13,-32,-33,-34,-58,-35,-36,-37,-38,-60,-61,-39,-4,-14,-10,-59,-52,-40,-18,16,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-11,-19,-20,16,-53,-54,-21,-56,16,-55,16,16,16,-63,16,16,16,-57,-15,16,-16,16,-62,]),'PRINT':([7,9,10,11,12,13,14,15,18,19,21,22,23,24,25,28,29,30,31,33,34,42,44,45,46,62,66,68,72,77,78,79,80,81,82,83,84,85,86,87,88,92,95,96,99,100,101,107,109,114,116,120,121,122,125,126,128,129,131,132,134,135,136,137,],[17,17,-3,-5,-6,-7,-8,-9,-12,-39,-13,-32,-33,-34,-58,-35,-36,-37,-38,-60,-61,-39,-4,-14,-10,-59,-52,-40,-18,17,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-11,-19,-20,17,-53,-54,-21,-56,17,-55,17,17,17,-63,17,17,17,-57,-15,17,-16,17,-62,]),'IDENTIFIER':([7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,42,44,45,46,47,49,51,52,53,54,55,56,57,58,59,60,61,62,66,68,70,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,95,96,97,99,100,101,105,107,109,114,116,119,120,121,122,125,126,128,129,131,132,134,135,136,137,],[19,42,19,-3,-5,-6,-7,-8,-9,42,-12,-39,42,-13,-32,-33,-34,-58,64,65,-35,-36,-37,-38,-60,-61,-27,-28,-29,-30,-31,-39,-4,-14,-10,42,71,42,42,42,42,42,42,42,42,42,42,42,-59,-52,-40,42,94,98,19,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,19,71,-11,-19,94,71,19,-53,-54,42,-21,-56,19,-55,42,19,19,19,-63,19,19,19,-57,-15,19,-16,19,-62,]),'IF':([7,9,10,11,12,13,14,15,18,19,21,22,23,24,25,28,29,30,31,33,34,42,44,45,46,62,66,68,72,77,78,79,80,81,82,83,84,85,86,87,88,92,95,96,99,100,101,107,109,114,116,120,121,122,125,126,128,129,131,132,134,135,136,137,],[20,20,-3,-5,-6,-7,-8,-9,-12,-39,-13,-32,-33,-34,-58,-35,-36,-37,-38,-60,-61,-39,-4,-14,-10,-59,-52,-40,-18,20,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-11,-19,-20,20,-53,-54,-21,-56,20,-55,20,20,20,-63,20,20,20,-57,-15,20,-16,20,-62,]),'FN':([7,9,10,11,12,13,14,15,18,19,21,22,23,24,25,28,29,30,31,33,34,42,44,45,46,62,66,68,72,77,78,79,80,81,82,83,84,85,86,87,88,92,95,96,99,100,101,107,109,114,116,120,121,122,125,126,128,129,131,132,134,135,136,137,],[27,27,-3,-5,-6,27,-8,-9,-12,-39,-13,-32,-33,-34,-58,-35,-36,-37,-38,-60,-61,-39,-4,-14,-10,-59,-52,-40,-18,27,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-11,-19,-20,27,-53,-54,-21,-56,27,-55,27,27,27,-63,27,27,27,-57,-15,27,-16,27,-62,]),'INT_VALUE':([7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,28,29,30,31,33,34,42,44,45,46,47,51,52,53,54,55,56,57,58,59,60,61,62,66,68,70,72,77,78,79,80,81,82,83,84,85,86,87,88,89,92,95,96,99,100,101,105,107,109,114,116,119,120,121,122,125,126,128,129,131,132,134,135,136,137,],[28,28,28,-3,-5,-6,-7,-8,-9,28,-12,-39,28,-13,-32,-33,-34,-58,-35,-36,-37,-38,-60,-61,-39,-4,-14,-10,28,28,28,28,28,28,28,28,28,28,28,28,-59,-52,-40,28,-18,28,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,28,-11,-19,-20,28,-53,-54,28,-21,-56,28,-55,28,28,28,28,-63,28,28,28,-57,-15,28,-16,28,-62,]),'FLOAT_VALUE':([7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,28,29,30,31,33,34,42,44,45,46,47,51,52,53,54,55,56,57,58,59,60,61,62,66,68,70,72,77,78,79,80,81,82,83,84,85,86,87,88,89,92,95,96,99,100,101,105,107,109,114,116,119,120,121,122,125,126,128,129,131,132,134,135,136,137,],[29,29,29,-3,-5,-6,-7,-8,-9,29,-12,-39,29,-13,-32,-33,-34,-58,-35,-36,-37,-38,-60,-61,-39,-4,-14,-10,29,29,29,29,29,29,29,29,29,29,29,29,-59,-52,-40,29,-18,29,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,29,-11,-19,-20,29,-53,-54,29,-21,-56,29,-55,29,29,29,29,-63,29,29,29,-57,-15,29,-16,29,-62,]),'STRING_VALUE':([7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,28,29,30,31,33,34,42,44,45,46,47,51,52,53,54,55,56,57,58,59,60,61,62,66,68,70,72,77,78,79,80,81,82,83,84,85,86,87,88,89,92,95,96,99,100,101,105,107,109,114,116,119,120,121,122,125,126,128,129,131,132,134,135,136,137,],[30,30,30,-3,-5,-6,-7,-8,-9,30,-12,-39,30,-13,-32,-33,-34,-58,-35,-36,-37,-38,-60,-61,-39,-4,-14,-10,30,30,30,30,30,30,30,30,30,30,30,30,-59,-52,-40,30,-18,30,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,30,-11,-19,-20,30,-53,-54,30,-21,-56,30,-55,30,30,30,30,-63,30,30,30,-57,-15,30,-16,30,-62,]),'MINUS':([7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,28,29,30,31,33,34,42,44,45,46,47,51,52,53,54,55,56,57,58,59,60,61,62,66,68,70,72,77,78,79,80,81,82,83,84,85,86,87,88,89,92,95,96,99,100,101,105,107,109,114,116,119,120,121,122,125,126,128,129,131,132,134,135,136,137,],[32,32,32,-3,-5,-6,-7,-8,-9,32,-12,-39,32,-13,-32,-33,-34,-58,-35,-36,-37,-38,-60,-61,-39,-4,-14,-10,32,32,32,32,32,32,32,32,32,32,32,32,-59,-52,-40,32,-18,32,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,32,-11,-19,-20,32,-53,-54,32,-21,-56,32,-55,32,32,32,32,-63,32,32,32,-57,-15,32,-16,32,-62,]),'INT':([7,9,10,11,12,13,14,15,18,19,21,22,23,24,25,28,29,30,31,33,34,42,44,45,46,49,62,66,67,68,72,77,78,79,80,81,82,83,84,85,86,87,88,90,92,95,96,97,99,100,101,107,109,111,114,116,118,120,121,122,125,126,128,129,131,132,134,135,136,137,],[35,35,-3,-5,-6,-7,-8,-9,-12,-39,-13,-32,-33,-34,35,-35,-36,-37,-38,-60,-61,-39,-4,-14,-10,35,-59,-52,35,-40,-18,35,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,35,-11,-19,-20,35,35,-53,-54,-21,-56,35,35,-55,35,35,35,35,-63,35,35,35,-57,-15,35,-16,35,-62,]),'FLOAT':([7,9,10,11,12,13,14,15,18,19,21,22,23,24,25,28,29,30,31,33,34,42,44,45,46,49,62,66,67,68,72,77,78,79,80,81,82,83,84,85,86,87,88,90,92,95,96,97,99,100,101,107,109,111,114,116,118,120,121,122,125,126,128,129,131,132,134,135,136,137,],[36,36,-3,-5,-6,-7,-8,-9,-12,-39,-13,-32,-33,-34,36,-35,-36,-37,-38,-60,-61,-39,-4,-14,-10,36,-59,-52,36,-40,-18,36,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,36,-11,-19,-20,36,36,-53,-54,-21,-56,36,36,-55,36,36,36,36,-63,36,36,36,-57,-15,36,-16,36,-62,]),'STRING':([7,9,10,11,12,13,14,15,18,19,21,22,23,24,25,28,29,30,31,33,34,42,44,45,46,49,62,66,67,68,72,77,78,79,80,81,82,83,84,85,86,87,88,90,92,95,96,97,99,100,101,107,109,111,114,116,118,120,121,122,125,126,128,129,131,132,134,135,136,137,],[37,37,-3,-5,-6,-7,-8,-9,-12,-39,-13,-32,-33,-34,37,-35,-36,-37,-38,-60,-61,-39,-4,-14,-10,37,-59,-52,37,-40,-18,37,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,37,-11,-19,-20,37,37,-53,-54,-21,-56,37,37,-55,37,37,37,37,-63,37,37,37,-57,-15,37,-16,37,-62,]),'ADAPT':([7,9,10,11,12,13,14,15,18,19,21,22,23,24,25,28,29,30,31,33,34,42,44,45,46,49,62,66,67,68,72,77,78,79,80,81,82,83,84,85,86,87,88,90,92,95,96,97,99,100,101,107,109,111,114,116,118,120,121,122,125,126,128,129,131,132,134,135,136,137,],[38,38,-3,-5,-6,-7,-8,-9,-12,-39,-13,-32,-33,-34,38,-35,-36,-37,-38,-60,-61,-39,-4,-14,-10,38,-59,-52,38,-40,-18,38,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,38,-11,-19,-20,38,38,-53,-54,-21,-56,38,38,-55,38,38,38,38,-63,38,38,38,-57,-15,38,-16,38,-62,]),'VOID':([7,9,10,11,12,13,14,15,18,19,21,22,23,24,25,28,29,30,31,33,34,42,44,45,46,49,62,66,67,68,72,77,78,79,80,81,82,83,84,85,86,87,88,90,92,95,96,97,99,100,101,107,109,111,114,116,118,120,121,122,125,126,128,129,131,132,134,135,136,137,],[39,39,-3,-5,-6,-7,-8,-9,-12,-39,-13,-32,-33,-34,39,-35,-36,-37,-38,-60,-61,-39,-4,-14,-10,39,-59,-52,39,-40,-18,39,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,39,-11,-19,-20,39,39,-53,-54,-21,-56,39,39,-55,39,39,39,39,-63,39,39,39,-57,-15,39,-16,39,-62,]),'FOR':([7,9,10,11,12,13,14,15,18,19,21,22,23,24,25,28,29,30,31,33,34,42,44,45,46,62,66,68,72,77,78,79,80,81,82,83,84,85,86,87,88,92,95,96,99,100,101,107,109,114,116,120,121,122,125,126,128,129,131,132,134,135,136,137,],[40,40,-3,-5,-6,-7,-8,-9,-12,-39,-13,-32,-33,-34,40,-35,-36,-37,-38,-60,-61,-39,-4,-14,-10,-59,-52,-40,-18,40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-11,-19,-20,40,-53,-54,-21,-56,40,-55,40,40,40,-63,40,40,40,-57,-15,40,-16,40,-62,]),'}':([9,10,11,12,13,14,15,18,19,21,22,23,24,25,28,29,30,31,33,34,42,44,45,46,62,66,68,72,78,79,80,81,82,83,84,85,86,87,88,92,95,96,99,100,101,107,109,116,120,125,126,127,128,131,132,133,135,136,137,],[43,-3,-5,-6,-7,-8,-9,-12,-39,-13,-32,-33,-34,-58,-35,-36,-37,-38,-60,-61,-39,-4,-14,-10,-59,-52,-40,-18,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-11,-19,-20,109,-53,-54,-21,-56,-55,125,-63,131,132,-17,-57,-15,135,-16,137,-62,]),'WHILE':([18,19,22,23,24,28,29,30,31,42,63,66,68,72,78,79,80,81,82,83,84,85,86,87,88,95,96,100,101,107,116,],[48,-39,-32,-33,-34,-35,-36,-37,-38,-39,48,-52,-40,-18,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-19,-20,-53,-54,-21,-55,]),'ADD':([19,22,28,29,30,31,42,],[-39,51,-35,-36,-37,-38,-39,]),'SUB':([19,22,28,29,30,31,42,],[-39,52,-35,-36,-37,-38,-39,]),'MUL':([19,22,28,29,30,31,42,],[-39,53,-35,-36,-37,-38,-39,]),'DIV':([19,22,28,29,30,31,42,],[-39,54,-35,-36,-37,-38,-39,]),'OR':([19,22,28,29,30,31,42,],[-39,55,-35,-36,-37,-38,-39,]),'LE':([19,22,28,29,30,31,42,],[-39,56,-35,-36,-37,-38,-39,]),'GE':([19,22,28,29,30,31,42,],[-39,57,-35,-36,-37,-38,-39,]),'EQ':([19,22,28,29,30,31,42,],[-39,58,-35,-36,-37,-38,-39,]),'NE':([19,22,28,29,30,31,42,],[-39,59,-35,-36,-37,-38,-39,]),'GT':([19,22,28,29,30,31,42,],[-39,60,-35,-36,-37,-38,-39,]),'LT':([19,22,28,29,30,31,42,],[-39,61,-35,-36,-37,-38,-39,]),';':([19,22,23,24,28,29,30,31,42,66,68,72,78,79,80,81,82,83,84,85,86,87,88,91,95,96,100,101,107,113,116,],[-39,-32,-33,-34,-35,-36,-37,-38,-39,-52,-40,-18,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,105,-19,-20,-53,-54,-21,119,-55,]),'UNARY':([32,],[66,]),'EQUAL':([64,],[89,]),',':([71,75,98,],[-25,97,-26,]),'ACCEPT':([89,],[102,]),':':([103,112,],[111,118,]),'ELSE':([109,],[115,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'programStart':([0,],[2,]),'statements':([7,77,114,121,122,129,134,],[9,99,120,126,128,128,136,]),'statement':([7,9,77,99,114,120,121,122,126,128,129,134,136,],[10,44,10,44,10,44,10,10,44,44,10,10,44,]),'function_calls':([7,9,72,77,89,96,99,114,120,121,122,126,128,129,134,136,],[11,11,95,11,101,107,11,11,11,11,11,11,11,11,11,11,]),'condition':([7,9,77,99,114,120,121,122,126,128,129,134,136,],[12,12,12,12,12,12,12,12,12,12,12,12,12,]),'function_declarations':([7,9,77,99,114,120,121,122,126,128,129,134,136,],[13,13,13,13,13,13,13,13,13,13,13,13,13,]),'expression':([7,8,9,16,20,47,51,52,53,54,55,56,57,58,59,60,61,70,77,89,99,105,114,119,120,121,122,126,128,129,134,136,],[14,41,14,46,50,69,78,79,80,81,82,83,84,85,86,87,88,93,14,100,14,113,14,124,14,14,14,14,14,14,14,14,]),'loops':([7,9,25,77,99,114,120,121,122,126,128,129,134,136,],[15,15,62,15,15,15,15,15,15,15,15,15,15,15,]),'assignment':([7,9,25,67,77,99,114,120,121,122,126,128,129,134,136,],[18,18,63,91,18,18,18,18,18,18,18,18,18,18,18,]),'function_declaration':([7,9,13,77,99,114,120,121,122,126,128,129,134,136,],[21,21,45,21,21,21,21,21,21,21,21,21,21,21,]),'atoms':([7,8,9,16,20,47,51,52,53,54,55,56,57,58,59,60,61,70,77,89,99,105,114,119,120,121,122,126,128,129,134,136,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'paren_expr':([7,8,9,16,20,47,51,52,53,54,55,56,57,58,59,60,61,70,77,89,99,105,114,119,120,121,122,126,128,129,134,136,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'binary_expr':([7,8,9,16,20,47,51,52,53,54,55,56,57,58,59,60,61,70,77,89,99,105,114,119,120,121,122,126,128,129,134,136,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'loop':([7,9,25,77,99,114,120,121,122,126,128,129,134,136,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'datatype':([7,9,25,49,67,77,90,97,99,111,114,118,120,121,122,126,128,129,134,136,],[26,26,26,76,26,26,76,76,26,117,26,123,26,26,26,26,26,26,26,26,]),'variable':([7,8,9,16,20,47,51,52,53,54,55,56,57,58,59,60,61,70,77,89,99,105,114,119,120,121,122,126,128,129,134,136,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'forLoop':([7,9,25,77,99,114,120,121,122,126,128,129,134,136,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'whileLoop':([7,9,25,77,99,114,120,121,122,126,128,129,134,136,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'parameters':([49,90,],[73,104,]),'parameterList':([49,90,97,],[74,74,108,]),'parameter':([49,90,97,],[75,75,75,]),'function_body':([122,129,],[127,133,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> programStart','program',1,'p_program','adapscriptyacc.py',26),
  ('programStart -> FUNC INIT ( ) { statements }','programStart',7,'p_programStart','adapscriptyacc.py',30),
  ('statements -> statement','statements',1,'p_statements','adapscriptyacc.py',34),
  ('statements -> statements statement','statements',2,'p_statements','adapscriptyacc.py',35),
  ('statement -> function_calls','statement',1,'p_statement','adapscriptyacc.py',43),
  ('statement -> condition','statement',1,'p_statement','adapscriptyacc.py',44),
  ('statement -> function_declarations','statement',1,'p_statement','adapscriptyacc.py',45),
  ('statement -> expression','statement',1,'p_statement','adapscriptyacc.py',46),
  ('statement -> loops','statement',1,'p_statement','adapscriptyacc.py',47),
  ('statement -> RETURN expression','statement',2,'p_statement','adapscriptyacc.py',48),
  ('statement -> PRINT ( expression )','statement',4,'p_statement','adapscriptyacc.py',49),
  ('statement -> assignment','statement',1,'p_statement','adapscriptyacc.py',50),
  ('function_declarations -> function_declaration','function_declarations',1,'p_function_declarations','adapscriptyacc.py',64),
  ('function_declarations -> function_declarations function_declaration','function_declarations',2,'p_function_declarations','adapscriptyacc.py',65),
  ('function_declaration -> FN IDENTIFIER ( ) : datatype { function_body }','function_declaration',9,'p_function_declaration','adapscriptyacc.py',70),
  ('function_declaration -> FN IDENTIFIER ( parameters ) : datatype { function_body }','function_declaration',10,'p_function_declaration','adapscriptyacc.py',71),
  ('function_body -> statements','function_body',1,'p_function_body','adapscriptyacc.py',83),
  ('function_calls -> IDENTIFIER ( )','function_calls',3,'p_function_calls','adapscriptyacc.py',89),
  ('function_calls -> IDENTIFIER ( ) function_calls','function_calls',4,'p_function_calls','adapscriptyacc.py',90),
  ('function_calls -> IDENTIFIER ( parameters )','function_calls',4,'p_function_calls','adapscriptyacc.py',91),
  ('function_calls -> IDENTIFIER ( parameters ) function_calls','function_calls',5,'p_function_calls','adapscriptyacc.py',92),
  ('parameters -> parameterList','parameters',1,'p_parameters','adapscriptyacc.py',104),
  ('parameterList -> parameter','parameterList',1,'p_parameterList','adapscriptyacc.py',110),
  ('parameterList -> parameter , parameterList','parameterList',3,'p_parameterList','adapscriptyacc.py',111),
  ('parameter -> IDENTIFIER','parameter',1,'p_parameter','adapscriptyacc.py',120),
  ('parameter -> datatype IDENTIFIER','parameter',2,'p_parameter','adapscriptyacc.py',121),
  ('datatype -> INT','datatype',1,'p_datatype','adapscriptyacc.py',130),
  ('datatype -> FLOAT','datatype',1,'p_datatype','adapscriptyacc.py',131),
  ('datatype -> STRING','datatype',1,'p_datatype','adapscriptyacc.py',132),
  ('datatype -> ADAPT','datatype',1,'p_datatype','adapscriptyacc.py',133),
  ('datatype -> VOID','datatype',1,'p_datatype','adapscriptyacc.py',134),
  ('expression -> atoms','expression',1,'p_expression','adapscriptyacc.py',140),
  ('expression -> paren_expr','expression',1,'p_expression','adapscriptyacc.py',141),
  ('expression -> binary_expr','expression',1,'p_expression','adapscriptyacc.py',142),
  ('atoms -> INT_VALUE','atoms',1,'p_atom','adapscriptyacc.py',147),
  ('atoms -> FLOAT_VALUE','atoms',1,'p_atom','adapscriptyacc.py',148),
  ('atoms -> STRING_VALUE','atoms',1,'p_atom','adapscriptyacc.py',149),
  ('atoms -> variable','atoms',1,'p_atom','adapscriptyacc.py',150),
  ('variable -> IDENTIFIER','variable',1,'p_variable','adapscriptyacc.py',164),
  ('paren_expr -> ( expression )','paren_expr',3,'p_paren_expr','adapscriptyacc.py',169),
  ('binary_expr -> atoms ADD expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',174),
  ('binary_expr -> atoms SUB expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',175),
  ('binary_expr -> atoms MUL expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',176),
  ('binary_expr -> atoms DIV expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',177),
  ('binary_expr -> atoms OR expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',178),
  ('binary_expr -> atoms LE expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',179),
  ('binary_expr -> atoms GE expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',180),
  ('binary_expr -> atoms EQ expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',181),
  ('binary_expr -> atoms NE expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',182),
  ('binary_expr -> atoms GT expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',183),
  ('binary_expr -> atoms LT expression','binary_expr',3,'p_binary_expr','adapscriptyacc.py',184),
  ('binary_expr -> MINUS UNARY','binary_expr',2,'p_binary_expr','adapscriptyacc.py',185),
  ('assignment -> datatype IDENTIFIER EQUAL expression','assignment',4,'p_assignment','adapscriptyacc.py',193),
  ('assignment -> datatype IDENTIFIER EQUAL function_calls','assignment',4,'p_assignment','adapscriptyacc.py',194),
  ('assignment -> datatype IDENTIFIER EQUAL ACCEPT ( )','assignment',6,'p_assignment','adapscriptyacc.py',195),
  ('condition -> IF expression { statements }','condition',5,'p_condition','adapscriptyacc.py',200),
  ('condition -> IF expression { statements } ELSE { statements }','condition',9,'p_condition','adapscriptyacc.py',201),
  ('loops -> loop','loops',1,'p_loops','adapscriptyacc.py',211),
  ('loops -> loop loops','loops',2,'p_loops','adapscriptyacc.py',212),
  ('loop -> forLoop','loop',1,'p_loop','adapscriptyacc.py',222),
  ('loop -> whileLoop','loop',1,'p_loop','adapscriptyacc.py',223),
  ('forLoop -> FOR ( assignment ; expression ; expression ) { statements }','forLoop',11,'p_forLoop','adapscriptyacc.py',229),
  ('whileLoop -> assignment WHILE ( expression ) { statements }','whileLoop',8,'p_whileLoop','adapscriptyacc.py',234),
]
